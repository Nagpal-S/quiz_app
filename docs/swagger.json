{
    "swagger": "2.0",
    "info": {
        "description": "This is list API's to be used in Quiz App.",
        "title": "Quiz App API's",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/quizes/get-categories/{user_id}": {
            "get": {
                "description": "This API will provide list of quiz categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quizes"
                ],
                "summary": "This API will provide list of quiz categories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.categoryInfo"
                        }
                    }
                }
            }
        },
        "/quizes/get-contest-joined-by-user/{user_id}": {
            "get": {
                "description": "This API will list contest joined by user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quizes"
                ],
                "summary": "This API will list contest joined by user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.JoinedContestResponse"
                        }
                    }
                }
            }
        },
        "/quizes/get-question-by-category/{category_id}": {
            "get": {
                "description": "This API will provide list of quiz questions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quizes"
                ],
                "summary": "This API will provide list of quiz questions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "quiz category id",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.QuizResponse"
                        }
                    }
                }
            }
        },
        "/quizes/user-join-contest": {
            "post": {
                "description": "This API will make user to join a contest",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quizes"
                ],
                "summary": "This API will make user to join a contest",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "user_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "quiz category id",
                        "name": "category_id",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.JoinContestResponse"
                        }
                    }
                }
            }
        },
        "/upload/file": {
            "post": {
                "description": "upload file to s3",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User AUth"
                ],
                "summary": "upload file to s3",
                "parameters": [
                    {
                        "type": "file",
                        "description": "user file to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.fileUploadResponse"
                        }
                    }
                }
            }
        },
        "/users/check-user/{phone}": {
            "get": {
                "description": "generateing OTP for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User AUth"
                ],
                "summary": "generateing OTP for the user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user phone number",
                        "name": "phone",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.OTPResponse"
                        }
                    }
                }
            }
        },
        "/users/edit-user-profile": {
            "post": {
                "description": "This API edits the user profile",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Auth"
                ],
                "summary": "This API edits the user profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User Name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User Email",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User Phone",
                        "name": "phone",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User Image",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User Gender (Male, Female, Others)",
                        "name": "gender",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.editProfileResponse"
                        }
                    }
                }
            }
        },
        "/users/get-user-wallet-details/{user_id}": {
            "get": {
                "description": "Fetches user wallet and transaction details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Wallet"
                ],
                "summary": "Get user wallet details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.APIResponse"
                        }
                    }
                }
            }
        },
        "/users/get-user/{id}": {
            "get": {
                "description": "This API will provide user info bu id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User AUth"
                ],
                "summary": "This API will provide user info bu id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "this is user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.userInfo"
                        }
                    }
                }
            }
        },
        "/users/initiate-user-transaction": {
            "post": {
                "description": "This API will make user transactions",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Wallet"
                ],
                "summary": "This API will make user transactions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Transaction Amount",
                        "name": "amount",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Transaction Type (CREDIT/DEBIT)",
                        "name": "transaction_type",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.transactionResponse"
                        }
                    }
                }
            }
        },
        "/users/verify-otp/{userId}/{otp}": {
            "get": {
                "description": "This API will verify user OTP with userId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User AUth"
                ],
                "summary": "This API will verify user OTP with userId",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user app Id",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user otp",
                        "name": "otp",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.verifyOtpResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.APIResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "$ref": "#/definitions/controllers.WalletDetails"
                },
                "message": {
                    "type": "string",
                    "example": "User wallet details found."
                },
                "status": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "controllers.ContestInfo": {
            "type": "object",
            "properties": {
                "contest_amount": {
                    "type": "integer",
                    "example": 10000
                },
                "contest_date": {
                    "type": "string",
                    "example": "2024-12-21T18:00:00+05:30"
                },
                "contest_id": {
                    "type": "integer",
                    "example": 1
                },
                "contest_name": {
                    "type": "string",
                    "example": "GK"
                }
            }
        },
        "controllers.JoinContestResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Contest joined successfully."
                },
                "status": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "controllers.JoinedContestResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.ContestInfo"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Contest list found."
                },
                "status": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "controllers.OTPResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "object",
                    "properties": {
                        "otp": {
                            "type": "string",
                            "example": "8162"
                        },
                        "userId": {
                            "type": "integer",
                            "example": 3
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "example": "New user created"
                },
                "status": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "controllers.Question": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "integer",
                    "example": 1
                },
                "correct_answer": {
                    "type": "string",
                    "example": "c"
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-12-18T14:16:53+05:30"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "level": {
                    "type": "string",
                    "example": "easy"
                },
                "option_a": {
                    "type": "string",
                    "example": "Unites States of America"
                },
                "option_b": {
                    "type": "string",
                    "example": "England"
                },
                "option_c": {
                    "type": "string",
                    "example": "India"
                },
                "option_d": {
                    "type": "string",
                    "example": "Sri Lanka"
                },
                "question": {
                    "type": "string",
                    "example": "Where is Delhi?"
                }
            }
        },
        "controllers.QuizResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "object",
                    "properties": {
                        "category_id": {
                            "type": "integer",
                            "example": 1
                        },
                        "category_name": {
                            "type": "string",
                            "example": "GK"
                        },
                        "questions": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/controllers.Question"
                            }
                        },
                        "questions_duration": {
                            "type": "integer",
                            "example": 60
                        },
                        "quiz_end_time": {
                            "type": "string",
                            "example": "2024-12-24T18:57:33+05:30"
                        },
                        "quiz_start_time": {
                            "type": "string",
                            "example": "2024-12-24T14:00:00+05:30"
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Quiz question list found."
                },
                "status": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "controllers.Transaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 20
                },
                "created": {
                    "type": "string",
                    "example": "2024-12-18T23:04:50+05:30"
                },
                "title": {
                    "type": "string",
                    "example": "Deposit"
                },
                "transaction_type": {
                    "type": "string",
                    "example": "CREDIT"
                }
            }
        },
        "controllers.WalletDetails": {
            "type": "object",
            "properties": {
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.Transaction"
                    }
                },
                "wallet": {
                    "type": "number"
                }
            }
        },
        "controllers.categoryInfo": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "active": {
                                "type": "string",
                                "example": "1"
                            },
                            "created": {
                                "type": "string",
                                "example": "2024-12-17T18:07:19+05:30"
                            },
                            "icon": {
                                "type": "string",
                                "example": "https://quizbuck.s3.ap-south-1.amazonaws.com/uploads/1734090491_new.jpg"
                            },
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "join_amount": {
                                "type": "integer",
                                "example": 100
                            },
                            "num_of_users_can_join": {
                                "type": "integer",
                                "example": 20
                            },
                            "num_of_users_have_joined": {
                                "type": "integer",
                                "example": 0
                            },
                            "quiz_time": {
                                "type": "string",
                                "example": "2024-12-17T18:00:00+05:30"
                            },
                            "title": {
                                "type": "string",
                                "example": "GK"
                            },
                            "total_price": {
                                "type": "integer",
                                "example": 100000
                            },
                            "user_has_joined": {
                                "type": "boolean",
                                "example": true
                            }
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Category list data found."
                },
                "status": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "controllers.editProfileResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "User info updated successfully."
                },
                "status": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "controllers.fileUploadResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "object",
                    "properties": {
                        "url": {
                            "type": "string",
                            "example": "https://quizbuck.s3.ap-south-1.amazonaws.com/uploads/1734090491_new.jpg"
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "example": "File uploaded successfully"
                },
                "status": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "controllers.transactionResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Transaction successful and user wallet updated."
                },
                "status": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "controllers.userInfo": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "object",
                    "properties": {
                        "ID": {
                            "type": "integer",
                            "example": 3
                        },
                        "created": {
                            "type": "string",
                            "example": "2024-12-10T07:04:37Z"
                        },
                        "email": {
                            "type": "string",
                            "example": "shivam@gmail.com"
                        },
                        "name": {
                            "type": "string",
                            "example": "Shivam"
                        },
                        "otp": {
                            "type": "string",
                            "example": "8162"
                        },
                        "phone": {
                            "type": "string",
                            "example": "9144"
                        },
                        "register": {
                            "type": "string",
                            "example": "1"
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "example": "User logged in successfully"
                },
                "status": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "controllers.verifyOtpResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "object",
                    "properties": {
                        "ID": {
                            "type": "integer",
                            "example": 3
                        },
                        "created": {
                            "type": "string",
                            "example": "2024-12-10T07:04:37Z"
                        },
                        "email": {
                            "type": "string",
                            "example": "shivam@gmail.com"
                        },
                        "name": {
                            "type": "string",
                            "example": "Shivam"
                        },
                        "otp": {
                            "type": "string",
                            "example": "8162"
                        },
                        "phone": {
                            "type": "string",
                            "example": "9144"
                        },
                        "register": {
                            "type": "string",
                            "example": "1"
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "example": "User logged in successfully"
                },
                "status": {
                    "type": "string",
                    "example": "1"
                }
            }
        }
    }
}