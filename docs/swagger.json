{
    "swagger": "2.0",
    "info": {
        "description": "This is list API's to be used in Quiz App.",
        "title": "Quiz App API's",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/quizes/get-categories/{user_id}": {
            "get": {
                "description": "This API will provide list of quiz categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quizes"
                ],
                "summary": "This API will provide list of quiz categories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.CategoryInfo"
                        }
                    }
                }
            }
        },
        "/quizes/get-comparison-report/{user_id}/{other_user_id}/{category_id}": {
            "get": {
                "description": "This API will compare result with user id and other user ud",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quizes"
                ],
                "summary": "This API will compare result with user id and other user ud",
                "parameters": [
                    {
                        "type": "string",
                        "default": "32",
                        "description": "user id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "31",
                        "description": "user id",
                        "name": "other_user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "50",
                        "description": "user id",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.GetUserOtherUserReportResponse"
                        }
                    }
                }
            }
        },
        "/quizes/get-contest-joined-by-user/{user_id}": {
            "get": {
                "description": "This API will list contest joined by user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quizes"
                ],
                "summary": "This API will list contest joined by user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.JoinedContestResponse"
                        }
                    }
                }
            }
        },
        "/quizes/get-contest-leaderboard/{category_id}": {
            "get": {
                "description": "This API will provide user contest report",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quizes"
                ],
                "summary": "This API will provide user contest report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category_id id",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.GetUserContestLeaderboardResponse"
                        }
                    }
                }
            }
        },
        "/quizes/get-contest-prize-list-by-category/{category_id}": {
            "get": {
                "description": "This API will provide contest prizes list by category/contest id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quizes"
                ],
                "summary": "This API will provide contest prizes list by category/contest id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category_id id",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.PrizesResponse"
                        }
                    }
                }
            }
        },
        "/quizes/get-question-by-category/{category_id}": {
            "get": {
                "description": "This API will provide list of quiz questions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quizes"
                ],
                "summary": "This API will provide list of quiz questions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "quiz category id",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.QuizResponse"
                        }
                    }
                }
            }
        },
        "/quizes/get-rules-list-by-category/{category_id}": {
            "get": {
                "description": "This API will provide contest rules by category/contest id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quizes"
                ],
                "summary": "This API will provide contest rules by category/contest id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category_id id",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.RulesResponse"
                        }
                    }
                }
            }
        },
        "/quizes/get-user-contest-history/{user_id}": {
            "get": {
                "description": "This API will list contest history joined by user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quizes"
                ],
                "summary": "This API will list contest history joined by user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.GetUserPlayedContestResponse"
                        }
                    }
                }
            }
        },
        "/quizes/get-user-contest-result/{user_id}/{category_id}": {
            "get": {
                "description": "This API will provide user contest report",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quizes"
                ],
                "summary": "This API will provide user contest report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user_id id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "category_id id",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.GetUserContestReportResponse"
                        }
                    }
                }
            }
        },
        "/quizes/user-join-contest": {
            "post": {
                "description": "This API will make user to join a contest",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quizes"
                ],
                "summary": "This API will make user to join a contest",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "user_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "quiz category id",
                        "name": "category_id",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.JoinContestResponse"
                        }
                    }
                }
            }
        },
        "/quizes/user-question-answer": {
            "post": {
                "description": "This API will record user response for questions",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quizes"
                ],
                "summary": "This API will record user response for questions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "user_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "quiz category id",
                        "name": "category_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "quiz question id",
                        "name": "question_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "quiz answer_given that user has given like a, b, c, d",
                        "name": "answer_given",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "if user answer is corect or wrong pass CORRECT/WRONG",
                        "name": "answer_type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "time taken by user to solve the answer in seconds",
                        "name": "time_taken",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.QAResponse"
                        }
                    }
                }
            }
        },
        "/settings/get-banners-list": {
            "get": {
                "description": "This API will provide list of banners",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "This API will provide list of banners",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.GetBannersListResponse"
                        }
                    }
                }
            }
        },
        "/upload/file": {
            "post": {
                "description": "upload file to s3",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User AUth"
                ],
                "summary": "upload file to s3",
                "parameters": [
                    {
                        "type": "file",
                        "description": "user file to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.fileUploadResponse"
                        }
                    }
                }
            }
        },
        "/users/check-user/{phone}": {
            "get": {
                "description": "generateing OTP for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User AUth"
                ],
                "summary": "generateing OTP for the user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user phone number",
                        "name": "phone",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.OTPResponse"
                        }
                    }
                }
            }
        },
        "/users/edit-user-profile": {
            "post": {
                "description": "This API edits the user profile",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Auth"
                ],
                "summary": "This API edits the user profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User Name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User Email",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User Phone",
                        "name": "phone",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User Image",
                        "name": "image",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "User Gender (Male, Female, Others)",
                        "name": "gender",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.editProfileResponse"
                        }
                    }
                }
            }
        },
        "/users/get-user-wallet-details/{user_id}": {
            "get": {
                "description": "Fetches user wallet and transaction details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Wallet"
                ],
                "summary": "Get user wallet details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.APIResponse"
                        }
                    }
                }
            }
        },
        "/users/get-user/{id}": {
            "get": {
                "description": "This API will provide user info bu id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User AUth"
                ],
                "summary": "This API will provide user info bu id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "this is user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.userInfo"
                        }
                    }
                }
            }
        },
        "/users/initiate-user-transaction": {
            "post": {
                "description": "This API will make user transactions",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Wallet"
                ],
                "summary": "This API will make user transactions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Transaction Amount",
                        "name": "amount",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Transaction Type (CREDIT/DEBIT)",
                        "name": "transaction_type",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.transactionResponse"
                        }
                    }
                }
            }
        },
        "/users/verify-otp/{userId}/{otp}": {
            "get": {
                "description": "This API will verify user OTP with userId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User AUth"
                ],
                "summary": "This API will verify user OTP with userId",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user app Id",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user otp",
                        "name": "otp",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.verifyOtpResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.APIResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "$ref": "#/definitions/controllers.WalletDetails"
                },
                "message": {
                    "type": "string",
                    "example": "User wallet details found."
                },
                "status": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "controllers.BannerDetails": {
            "type": "object",
            "properties": {
                "ID": {
                    "description": "Unique ID of the banner",
                    "type": "integer",
                    "example": 1
                },
                "banner": {
                    "description": "URL of the banner image",
                    "type": "string",
                    "example": "image-url"
                },
                "crated": {
                    "description": "Timestamp of banner creation",
                    "type": "string",
                    "example": "2024-12-31T17:00:00+05:30"
                }
            }
        },
        "controllers.CategoryInfo": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "active": {
                                "type": "string",
                                "example": "1"
                            },
                            "created": {
                                "type": "string",
                                "example": "2024-12-17T18:07:19+05:30"
                            },
                            "icon": {
                                "type": "string",
                                "example": "https://quizbuck.s3.ap-south-1.amazonaws.com/uploads/1734090491_new.jpg"
                            },
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "join_amount": {
                                "type": "integer",
                                "example": 100
                            },
                            "num_of_users_can_join": {
                                "type": "integer",
                                "example": 20
                            },
                            "num_of_users_have_joined": {
                                "type": "integer",
                                "example": 0
                            },
                            "quiz_time": {
                                "type": "string",
                                "example": "2024-12-17T18:00:00+05:30"
                            },
                            "title": {
                                "type": "string",
                                "example": "GK"
                            },
                            "total_price": {
                                "type": "integer",
                                "example": 100000
                            },
                            "user_has_joined": {
                                "type": "boolean",
                                "example": true
                            }
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Category list data found."
                },
                "status": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "controllers.ComparisonResult": {
            "type": "object",
            "properties": {
                "answer_a": {
                    "type": "string",
                    "example": "Akbar"
                },
                "answer_b": {
                    "type": "string",
                    "example": "Babur"
                },
                "answer_c": {
                    "type": "string",
                    "example": "Shah Jahan"
                },
                "answer_d": {
                    "type": "string",
                    "example": "Aurangzeb"
                },
                "correct_answer": {
                    "type": "string",
                    "example": "b"
                },
                "other_user_answer": {
                    "type": "string",
                    "example": "Akbar"
                },
                "other_user_answer_type": {
                    "type": "string",
                    "example": "WRONG"
                },
                "other_user_points": {
                    "type": "integer",
                    "example": 15
                },
                "other_user_time_taken": {
                    "type": "integer",
                    "example": 0
                },
                "points": {
                    "type": "integer",
                    "example": 0
                },
                "question": {
                    "type": "string",
                    "example": "Who was the first Mughal Emperor of India?"
                },
                "time_taken": {
                    "type": "integer",
                    "example": 0
                },
                "user_answer": {
                    "type": "string",
                    "example": "N/A"
                },
                "user_answer_type": {
                    "type": "string",
                    "example": "NA"
                }
            }
        },
        "controllers.ContestHistoryInfo": {
            "type": "object",
            "properties": {
                "contest_amount": {
                    "type": "integer",
                    "example": 10000
                },
                "contest_date": {
                    "type": "string",
                    "example": "2024-12-21T18:00:00+05:30"
                },
                "contest_end_date": {
                    "type": "string",
                    "example": "2024-12-21T18:00:00+05:40"
                },
                "contest_id": {
                    "type": "integer",
                    "example": 1
                },
                "contest_name": {
                    "type": "string",
                    "example": "GK"
                },
                "contest_question_duration": {
                    "type": "integer",
                    "example": 15
                },
                "points": {
                    "type": "integer",
                    "example": 175
                },
                "prize_amount": {
                    "type": "integer",
                    "example": 175
                }
            }
        },
        "controllers.ContestInfo": {
            "type": "object",
            "properties": {
                "contest_amount": {
                    "type": "integer",
                    "example": 10000
                },
                "contest_date": {
                    "type": "string",
                    "example": "2024-12-21T18:00:00+05:30"
                },
                "contest_end_date": {
                    "type": "string",
                    "example": "2024-12-21T18:00:00+05:40"
                },
                "contest_id": {
                    "type": "integer",
                    "example": 1
                },
                "contest_name": {
                    "type": "string",
                    "example": "GK"
                },
                "contest_question_duration": {
                    "type": "integer",
                    "example": 15
                }
            }
        },
        "controllers.Details": {
            "type": "object",
            "properties": {
                "quiz_result": {
                    "description": "@Description List of quiz results for the user",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.QuizResult"
                    }
                },
                "total_points": {
                    "description": "@Description Total points scored by the user",
                    "type": "integer"
                }
            }
        },
        "controllers.GetBannersListResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "description": "Array of banner details",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.BannerDetails"
                    }
                },
                "message": {
                    "description": "Response message",
                    "type": "string",
                    "example": "Banners list found."
                },
                "status": {
                    "description": "Status of the request",
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "controllers.GetUserContestLeaderboardResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.LeaderboardEntry"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Leaderboard data found successfully."
                },
                "status": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "controllers.GetUserContestReportResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "description": "@Description Details of the quiz result",
                    "allOf": [
                        {
                            "$ref": "#/definitions/controllers.Details"
                        }
                    ]
                },
                "message": {
                    "description": "@Description Message in the response",
                    "type": "string",
                    "example": "User result found"
                },
                "status": {
                    "description": "@Description Status of the response",
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "controllers.GetUserOtherUserReportResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "$ref": "#/definitions/controllers.UserComparisonDetails"
                },
                "message": {
                    "type": "string",
                    "example": "User and Other user comparison data found"
                },
                "status": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "controllers.GetUserPlayedContestResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.ContestHistoryInfo"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Contest list found."
                },
                "status": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "controllers.JoinContestResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Contest joined successfully."
                },
                "status": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "controllers.JoinedContestResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.ContestInfo"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Contest list found."
                },
                "status": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "controllers.LeaderboardEntry": {
            "type": "object",
            "properties": {
                "points": {
                    "type": "integer",
                    "example": 175
                },
                "position": {
                    "type": "string",
                    "example": "1"
                },
                "prize_amount": {
                    "type": "integer",
                    "example": 0
                },
                "time_taken": {
                    "type": "integer",
                    "example": 20
                },
                "user_id": {
                    "type": "string",
                    "example": "1"
                },
                "user_image": {
                    "type": "string",
                    "example": "image"
                },
                "user_name": {
                    "type": "string",
                    "example": "snagpal"
                }
            }
        },
        "controllers.OTPResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "object",
                    "properties": {
                        "otp": {
                            "type": "string",
                            "example": "8162"
                        },
                        "userId": {
                            "type": "integer",
                            "example": 3
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "example": "New user created"
                },
                "status": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "controllers.Prize": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-12-26T19:08:03+05:30"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "rank_from": {
                    "type": "integer",
                    "example": 1
                },
                "rank_to": {
                    "type": "integer",
                    "example": 1
                },
                "winning": {
                    "type": "number",
                    "example": 25000
                }
            }
        },
        "controllers.PrizesResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.Prize"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Prizes list found."
                },
                "status": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "controllers.QAResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "User response recorded successfully."
                },
                "status": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "controllers.Question": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "integer",
                    "example": 1
                },
                "correct_answer": {
                    "type": "string",
                    "example": "c"
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-12-18T14:16:53+05:30"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "level": {
                    "type": "string",
                    "example": "easy"
                },
                "option_a": {
                    "type": "string",
                    "example": "Unites States of America"
                },
                "option_b": {
                    "type": "string",
                    "example": "England"
                },
                "option_c": {
                    "type": "string",
                    "example": "India"
                },
                "option_d": {
                    "type": "string",
                    "example": "Sri Lanka"
                },
                "question": {
                    "type": "string",
                    "example": "Where is Delhi?"
                }
            }
        },
        "controllers.QuizResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "object",
                    "properties": {
                        "category_id": {
                            "type": "integer",
                            "example": 1
                        },
                        "category_name": {
                            "type": "string",
                            "example": "GK"
                        },
                        "questions": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/controllers.Question"
                            }
                        },
                        "questions_duration": {
                            "type": "integer",
                            "example": 60
                        },
                        "quiz_end_time": {
                            "type": "string",
                            "example": "2024-12-24T18:57:33+05:30"
                        },
                        "quiz_start_time": {
                            "type": "string",
                            "example": "2024-12-24T14:00:00+05:30"
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Quiz question list found."
                },
                "status": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "controllers.QuizResult": {
            "type": "object",
            "properties": {
                "answer_a": {
                    "description": "@Description Option A of the question",
                    "type": "string",
                    "example": "United States of America"
                },
                "answer_b": {
                    "description": "@Description Option B of the question",
                    "type": "string",
                    "example": "England"
                },
                "answer_c": {
                    "description": "@Description Option C of the question",
                    "type": "string",
                    "example": "India"
                },
                "answer_d": {
                    "description": "@Description Option D of the question",
                    "type": "string",
                    "example": "Sri Lanka"
                },
                "correct_answer": {
                    "description": "@Description The correct answer for the question",
                    "type": "string",
                    "example": "c"
                },
                "points": {
                    "description": "@Description Points scored for this particular question",
                    "type": "integer",
                    "example": 80
                },
                "question": {
                    "description": "@Description The question asked in the quiz",
                    "type": "string",
                    "example": "Where is Delhi?"
                },
                "time_taken": {
                    "description": "@Description Points scored for this particular question",
                    "type": "integer",
                    "example": 1
                },
                "user_answer": {
                    "description": "@Description The answer given by the user",
                    "type": "string",
                    "example": "c"
                },
                "user_answer_type": {
                    "description": "@Description Whether the answer is \"CORRECT\" or \"WRONG\"",
                    "type": "string",
                    "example": "CORRECT"
                }
            }
        },
        "controllers.Rule": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-12-25T16:11:37+05:30"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "rule": {
                    "type": "string",
                    "example": "Complete question on time"
                }
            }
        },
        "controllers.RulesResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.Rule"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Rules list found"
                },
                "status": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "controllers.Transaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 20
                },
                "created": {
                    "type": "string",
                    "example": "2024-12-18T23:04:50+05:30"
                },
                "title": {
                    "type": "string",
                    "example": "Deposit"
                },
                "transaction_type": {
                    "type": "string",
                    "example": "CREDIT"
                }
            }
        },
        "controllers.UserComparisonDetails": {
            "type": "object",
            "properties": {
                "other_user_total_points": {
                    "type": "integer",
                    "example": 450
                },
                "response": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.ComparisonResult"
                    }
                },
                "user_total_points": {
                    "type": "integer",
                    "example": 165
                }
            }
        },
        "controllers.WalletDetails": {
            "type": "object",
            "properties": {
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.Transaction"
                    }
                },
                "wallet": {
                    "type": "number"
                }
            }
        },
        "controllers.editProfileResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "User info updated successfully."
                },
                "status": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "controllers.fileUploadResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "object",
                    "properties": {
                        "url": {
                            "type": "string",
                            "example": "https://quizbuck.s3.ap-south-1.amazonaws.com/uploads/1734090491_new.jpg"
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "example": "File uploaded successfully"
                },
                "status": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "controllers.transactionResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Transaction successful and user wallet updated."
                },
                "status": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "controllers.userInfo": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "object",
                    "properties": {
                        "ID": {
                            "type": "integer",
                            "example": 3
                        },
                        "created": {
                            "type": "string",
                            "example": "2024-12-10T07:04:37Z"
                        },
                        "email": {
                            "type": "string",
                            "example": "shivam@gmail.com"
                        },
                        "name": {
                            "type": "string",
                            "example": "Shivam"
                        },
                        "otp": {
                            "type": "string",
                            "example": "8162"
                        },
                        "phone": {
                            "type": "string",
                            "example": "9144"
                        },
                        "register": {
                            "type": "string",
                            "example": "1"
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "example": "User logged in successfully"
                },
                "status": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "controllers.verifyOtpResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "object",
                    "properties": {
                        "ID": {
                            "type": "integer",
                            "example": 3
                        },
                        "created": {
                            "type": "string",
                            "example": "2024-12-10T07:04:37Z"
                        },
                        "email": {
                            "type": "string",
                            "example": "shivam@gmail.com"
                        },
                        "name": {
                            "type": "string",
                            "example": "Shivam"
                        },
                        "otp": {
                            "type": "string",
                            "example": "8162"
                        },
                        "phone": {
                            "type": "string",
                            "example": "9144"
                        },
                        "register": {
                            "type": "string",
                            "example": "1"
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "example": "User logged in successfully"
                },
                "status": {
                    "type": "string",
                    "example": "1"
                }
            }
        }
    }
}